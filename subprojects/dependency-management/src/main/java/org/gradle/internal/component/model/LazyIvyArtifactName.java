/*
 * Copyright 2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.gradle.internal.component.model;

import javax.annotation.Nullable;
import java.util.function.Supplier;

/**
 * A lazily initialized {@link IvyArtifactName} which delegates to an underlying
 * {@code IvyArtifactName}, which is further generated by a provided generator function.
 * The generator function is not executed until information is requested from a given instance,
 * thus optimizing the case where instances of this class are created but not used, and
 * ensuring that expensive generators, for example those which realize tasks, are not
 * executed unless necessary.
 * <p>
 * This class is not thread safe.
 */
public class LazyIvyArtifactName implements IvyArtifactName {

    private final Supplier<IvyArtifactName> nameSupplier;

    private IvyArtifactName delegate;

    public LazyIvyArtifactName(Supplier<IvyArtifactName> nameSupplier) {
        this.nameSupplier = nameSupplier;
    }

    private IvyArtifactName getDelegate() {
        if (delegate == null) {
            delegate = nameSupplier.get();
        }
        return delegate;
    }

    @Override
    public String getName() {
        return getDelegate().getName();
    }

    @Override
    public String getType() {
        return getDelegate().getType();
    }

    @Nullable
    @Override
    public String getExtension() {
        return getDelegate().getExtension();
    }

    @Nullable
    @Override
    public String getClassifier() {
        return getDelegate().getClassifier();
    }

    @Override
    public String toString() {
        return getDelegate().toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof IvyArtifactName)) {
            return false;
        }
        return getDelegate().equals(o);
    }

    @Override
    public int hashCode() {
        return getDelegate().hashCode();
    }
}
